import "@radix-ui/themes/styles.css";
import "./theme-config.css";
import "./globals.css";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import NavBar from "@/app/NavBar";
import React, { ReactNode } from "react";
import { Container, Theme } from "@radix-ui/themes";
import AuthProvider from "@/app/auth/Provider";
import QueryClientProvider from "./QueryClientProvider";
import prisma from "@/prisma/client";
import { RecoilRoot } from "recoil";
import RecoilContextProvider from "@/app/RecoilContextProvider";

const inter = Inter({ subsets: ["latin"], variable: "--font-inter" });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

let userId: string;

const getIssueStatus = async () => {
  const result = await prisma.user.findMany({
    select: {
      id: true,
    },
  });

  for (const item of result) {
    userId = item.id;
  }

  return prisma.issue.count({
    where: {
      assignedToUserId: userId,
      NOT: {
        status: "CLOSED",
      },
    },
  });
};

const RootLayout = async ({ children }: { children: ReactNode }) => {
  const count = await getIssueStatus();

  return (
    <html lang="en">
      <body className={inter.variable}>
        <QueryClientProvider>
          <AuthProvider>
            <RecoilContextProvider>
              <Theme appearance="dark" accentColor="plum">
                <NavBar count={count} userId={userId ?? ""} />
                <main className="p-5">
                  <Container>{children}</Container>
                </main>
              </Theme>
            </RecoilContextProvider>
          </AuthProvider>
        </QueryClientProvider>
      </body>
    </html>
  );
};

export default RootLayout;
